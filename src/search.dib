#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!csharp

#!import ./common.dib

const string PostsIndex = "posts";

#!csharp

#!import ./setup-clients.dib

#!markdown

# Searching for data

#!csharp

var testCaseName = "search-all";

var _response = await _client.SearchAsync<BlogPost>(s => s
    .Index(PostsIndex).MatchAll()
);

var response = await client.SearchAsync<BlogPost>(s => s 
    .Index(PostsIndex).Query(q => q.MatchAll(q => {}))
);

ReportAndAssert(testCaseName, _response, response);

#!csharp

var testCaseName = "simple-search-with-term-and-pagination";

var _response = await _client.SearchAsync<BlogPost>(s => s
    .Index(PostsIndex)
    .From(0)
    .Size(10)
    .Query(q => q
        .Term(t => t.Field(f=> f.Title).Value("Generic Fresh Cheese"))
    )
);

var response = await client.SearchAsync<BlogPost>(s => s 
    .Index(PostsIndex)
    .From(0)
    .Size(10)
    .Query(q => q
        .Term(t => t.Field(f => f.Title).Value("Generic Fresh Cheese")) 
    )
);

ReportAndAssert(testCaseName, _response, response);
